/'
 * QuantumLog
 * License: MIT
 * Source: https://github.com/JoeFerri/QuantumLog
 * Copyright (c) 2025 Giuseppe Ferri <jfinfoit@gmail.com>
'/

/'
 * 
'/

!include ql-style-global.iuml


/'
 * Set Line Background Color
 *
 * Associates the style class $cl with a color $color for the line and background.
 *
 * @example
 *   $qlSetLineBkgrColor(tomenu, Orange)
 *     component [MainBoard]
 *       interface IMainMenu2 <<tomenu>>
 *         MainMenu -l- IMainMenu2 <<tomenu>>
 * 
 * @param $cl class
 * @param $color color
'/
!procedure $qlSetLineBkgrColor($cl, $color)
  <style>
    .$cl {
        LineColor $color
        BackgroundColor %darken($color, 10)
    }
  </style>
!endprocedure


/'
 * Interface Icon Component
 *
 * Creates a component with an icon representing an interface.
 *
 * @example
 *   $qlInterfaceIconComponent(K,red) as K {
 *     component B
 *   }
 * 
 * @param $name component name
 * @param $color interface color
 * @param $scale icon scale
'/
!procedure $qlInterfaceIconComponent($name, $color, $scale=0.3)
  component "<$qlInterfaceIcon{scale=$scale,color=$color}> $name"
!endprocedure



/'
 * Note
 *
 * Create a note element with an optional code block.
 * The $show parameter determines the actual creation of the note.
 * You can globally change the default behavior by modifying the $qlShowNotes() function.
 *
 * @see ql-style-global::$qlShowNotes()
 *
 * @param $name the name of the element note
 * @param $note note
 * @param $code code (optional)
 * @param $show True to show the note
'/
!procedure $qlNote($name, $note, $code="", $show=$qlShowNotes())
  !if $show
    note as $name
      $note
      !if %not(%strlen($code) == 0)
'! there should be no spaces to the left of the <code> and </code> tags @JoeFerri
<code>
$code
</code>
      !endif
    end note
  !endif
!endprocedure



/'
 * Note Relative
 *
 * Creates a note element and connects it with its owner.
 * The $show parameter determines the actual creation of the note.
 * You can globally change the default behavior by modifying the $qlShowNotes() function.
 *
 * @see ql-style-global::$qlShowNotes()
 *
 * @param $name1 the name of the element note
 * @param $name2 the name of the element owner
 * @param $rel relation between the elements (".", "..", ".l.", ...)
 * @param $note note
 * @param $show True to show the note
'/
!procedure $qlNoteRel($name1, $name2, $rel, $note, $code="", $show=$qlShowNotes())
  !if $show
    $qlNote($name1, $note, $code, $show)
    $name1 $rel $name2
  !endif
!endprocedure